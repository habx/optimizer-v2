version: 2
jobs:
  get-requirements:
    docker:
      - image: circleci/python:3.6
    parallelism: 2
    steps:
      - checkout
#      - restore_cache:
#          keys:
#            - v2-dependencies-{{ .Branch }}-{{ checksum "requirements.txt" }}
#            - v2-dependencies-{{ .Branch }}-
#            - v2-dependencies-
      - run: virtualenv .venv
      - run: source .venv/bin/activate && pip install -q --upgrade pip
      - run: source .venv/bin/activate && pip install -q -r requirements.txt
      - save_cache:
          paths:
            - .venv
          key: v2-dependencies-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - project

  tests:
    docker:
      - image: circleci/python:3.6
    parallelism: 2
    steps:
      - checkout
      # We need to reinstall protobuf because it puts some test data on some system path 
      - run: sudo pip install -q --upgrade pip
      - run: sudo pip install -q -r requirements.txt
      - run: ./run_tests.sh

  build-container:
    docker:
      - image: plugins/ecr:17.05
    steps:
      - attach_workspace:
          at: /root/
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          command: |
            export BUILD_REF=$(if [ -z "$CIRCLE_TAG" ]; then echo ${CIRCLE_BRANCH/\//-}-${CIRCLE_SHA1:0:7}; else echo $CIRCLE_TAG; fi)

            export PLUGIN_TAGS=${BUILD_REF}
            export PLUGIN_REPO=724009402066.dkr.ecr.eu-west-1.amazonaws.com/worker-optimizer-v2
            /usr/local/bin/dockerd-entrypoint.sh /bin/drone-docker-ecr

  deploy-to-kubernetes-standard-worker:
    docker:
    - image: quay.io/honestbee/drone-kubernetes
    steps:
    - run:
        command: |
          export CIRCLE_PROJECT_REPONAME=worker-optimizer-v2
          export BUILD_REF=$(if [ -z "$CIRCLE_TAG" ]; then echo ${CIRCLE_BRANCH/\//-}-${CIRCLE_SHA1:0:7}; else echo $CIRCLE_TAG; fi)
          export DST_NAMESPACE=$(if [ -z "$CIRCLE_TAG" ]; then echo dev; else echo staging; fi)

          export PLUGIN_TAG=${BUILD_REF}
          export PLUGIN_REPO=724009402066.dkr.ecr.eu-west-1.amazonaws.com/${CIRCLE_PROJECT_REPONAME}
          export PLUGIN_CONTAINER=${CIRCLE_PROJECT_REPONAME}
          export PLUGIN_DEPLOYMENT=${CIRCLE_PROJECT_REPONAME}
          export PLUGIN_NAMESPACE=${DST_NAMESPACE}
          export PLUGIN_KUBERNETES_SERVER=${KUBERNETES_SERVER_DEV}
          export PLUGIN_KUBERNETES_TOKEN=${KUBERNETES_TOKEN_DEV}
          /bin/update.sh

  deploy-to-kubernetes-low-priority-worker:
    docker:
    - image: quay.io/honestbee/drone-kubernetes
    steps:
    - run:
        command: |
          export CIRCLE_PROJECT_REPONAME=worker-optimizer-v2
          export BUILD_REF=$(if [ -z "$CIRCLE_TAG" ]; then echo ${CIRCLE_BRANCH/\//-}-${CIRCLE_SHA1:0:7}; else echo $CIRCLE_TAG; fi)
          export DST_NAMESPACE=$(if [ -z "$CIRCLE_TAG" ]; then echo dev; else echo staging; fi)

          export PLUGIN_TAG=${BUILD_REF}
          export PLUGIN_REPO=724009402066.dkr.ecr.eu-west-1.amazonaws.com/${CIRCLE_PROJECT_REPONAME}
          export PLUGIN_CONTAINER=${CIRCLE_PROJECT_REPONAME}-low-priority
          export PLUGIN_DEPLOYMENT=${CIRCLE_PROJECT_REPONAME}-low-priority
          export PLUGIN_NAMESPACE=${DST_NAMESPACE}
          export PLUGIN_KUBERNETES_SERVER=${KUBERNETES_SERVER_DEV}
          export PLUGIN_KUBERNETES_TOKEN=${KUBERNETES_TOKEN_DEV}
          /bin/update.sh

workflows:
  version: 2
  ci-process:
    jobs:
      - get-requirements
      - tests:
          requires:
          - get-requirements
          filters:
            tags:
              only: /^v.*/

      - build-container:
          context: default_env_vars
          requires:
          - get-requirements
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - dev
                - OPT-73-worker-optimizer-v2

      - deploy-to-kubernetes-standard-worker:
          context: default_env_vars
          requires:
          - build-container
          - tests
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - dev
                - OPT-73-worker-optimizer-v2

      - deploy-to-kubernetes-low-priority-worker:
          context: default_env_vars
          requires:
          - build-container
          - tests
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - dev
                - OPT-73-worker-optimizer-v2
